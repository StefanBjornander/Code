0: GreaterThanEqual 8 longValue integral8$0#
1: Minus £temporary1850 longValue
2: Assign longValue £temporary1850
3: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
4: Parameter 64 signed char integral1$45#
5: Call 40 printChar 0
6: PostCall 40
7: Jump 19
8: Equal 14 space integral4$0#
9: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
10: Parameter 64 signed char integral1$32#
11: Call 40 printChar 0
12: PostCall 40
13: Jump 19
14: Equal 19 plus integral4$0#
15: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
16: Parameter 64 signed char integral1$43#
17: Call 40 printChar 0
18: PostCall 40
19: NotEqual 25 longValue integral8$0#
20: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
21: Parameter 64 signed char integral1$48#
22: Call 40 printChar 0
23: PostCall 40
24: Jump 29
25: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
26: Parameter 64 signed long int longValue
27: Call 40 printLongIntRec 0
28: PostCall 40
29: Return
30: FunctionEnd printLongInt
