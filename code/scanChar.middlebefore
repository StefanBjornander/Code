0: Assign c integral1$0#
1: Case < IntegralToIntegral £temporary1128 g_inDevice> g_inStatus integral4$0#
2: Case < IntegralToIntegral £temporary1139 g_inDevice> g_inStatus integral4$1#
3: CaseEnd g_inStatus
4: Jump < SetReturnValue>
5: IntegralToIntegral £temporary1128 g_inDevice
6: Assign stream £temporary1128
7: Dereference £temporary1129 stream 0
8: Assign handle £temporary1129.handle
9: AssignRegister rax integral8$0#
10: Dereference £temporary1132 stream 0
11: IntegralToIntegral £temporary1133 £temporary1132.handle
12: AssignRegister rdi £temporary1133
13: Address £temporary1135 c
14: IntegralToIntegral £temporary1136 £temporary1135
15: AssignRegister rsi £temporary1136
16: AssignRegister rdx integral8$1#
17: SysCall
18: Add £temporary1138 g_inChars integral4$1#
19: Assign g_inChars £temporary1138
20: SetReturnValue
21: Return c
22: IntegralToIntegral £temporary1139 g_inDevice
23: Assign inString £temporary1139
24: Assign £temporary1140 g_inChars
25: Add £temporary1141 g_inChars integral4$1#
26: Assign g_inChars £temporary1141
27: IntegralToIntegral £temporary1142 £temporary1140
28: Add £temporary1143 inString £temporary1142
29: Dereference £temporary1144 £temporary1143 0
30: SetReturnValue
31: Return £temporary1144
32: SetReturnValue
33: Return integral1$0#
34: Empty
35: FunctionEnd scanChar
