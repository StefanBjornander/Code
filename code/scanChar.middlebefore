0: Assign c integral1$0#
1: Case < IntegralToIntegral £temporary1146 g_inDevice> g_inStatus integral2$0#
2: Case < IntegralToIntegral £temporary1154 g_inDevice> g_inStatus integral2$1#
3: CaseEnd g_inStatus
4: Jump < Return integral1$0#>
5: IntegralToIntegral £temporary1146 g_inDevice
6: Assign stream £temporary1146
7: Dereference £temporary1147 stream 0
8: Assign handle £temporary1147.handle
9: AssignRegister ah integral1$63#
10: AssignRegister bx handle
11: AssignRegister cx integral2$1#
12: Address £temporary1152 c
13: AssignRegister dx £temporary1152
14: Interrupt 33
15: Add £temporary1153 g_inChars integral2$1#
16: Assign g_inChars £temporary1153
17: Return c
18: IntegralToIntegral £temporary1154 g_inDevice
19: Assign inString £temporary1154
20: Assign £temporary1155 g_inChars
21: Add £temporary1156 g_inChars integral2$1#
22: Assign g_inChars £temporary1156
23: Multiply £temporary1157 £temporary1155 integral2$1#
24: Add £temporary1158 inString £temporary1157
25: Dereference £temporary1159 £temporary1158 0
26: Return £temporary1159
27: Return integral1$0#
28: Empty
29: FunctionEnd scanChar
