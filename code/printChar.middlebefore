0: Case < IntegralToIntegral £temporary1754 g_outDevice> g_outStatus integral4$0#
1: Case < IntegralToIntegral £temporary1764 g_outDevice> g_outStatus integral4$1#
2: Case < Assign £temporary1770 g_outChars> g_outStatus integral4$2#
3: CaseEnd g_outStatus
4: Jump < Empty>
5: IntegralToIntegral £temporary1754 g_outDevice
6: Assign stream £temporary1754
7: AssignRegister rax integral8$1#
8: Dereference £temporary1757 stream 0
9: IntegralToIntegral £temporary1758 £temporary1757.handle
10: AssignRegister rdi £temporary1758
11: Address £temporary1760 c
12: IntegralToIntegral £temporary1761 £temporary1760
13: AssignRegister rsi £temporary1761
14: AssignRegister rdx integral8$1#
15: SysCall
16: Add £temporary1763 g_outChars integral4$1#
17: Assign g_outChars £temporary1763
18: Jump < Empty>
19: IntegralToIntegral £temporary1764 g_outDevice
20: Assign outString £temporary1764
21: Assign £temporary1765 g_outChars
22: Add £temporary1766 g_outChars integral4$1#
23: Assign g_outChars £temporary1766
24: IntegralToIntegral £temporary1767 £temporary1765
25: Add £temporary1768 outString £temporary1767
26: Dereference £temporary1769 £temporary1768 0
27: Assign £temporary1769 c
28: Jump < Empty>
29: Assign £temporary1770 g_outChars
30: Add £temporary1771 g_outChars integral4$1#
31: Assign g_outChars £temporary1771
32: Jump < Empty>
33: Empty
34: Return
35: FunctionEnd printChar
