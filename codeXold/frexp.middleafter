0: PushFloat x
1: PushFloat floating8$0#
2: Equal 42 x floating8$0#
3: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
4: PreCall 40 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
5: PushFloat x
6: Parameter 64 double x
7: Call 40 fabs 0
8: PostCall 40
9: GetReturnValue £temporary492
10: Parameter 64 double £temporary492
11: Call 40 log2 0
12: PostCall 40
13: GetReturnValue £temporary493
14: IntegralToIntegral £temporary494 £temporary493
15: Assign exponent £temporary494
16: PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 0
17: PushFloat floating8$2#
18: Parameter 68 double floating8$2#
19: IntegralToFloating £temporary495 exponent
20: Parameter 76 double £temporary495
21: Call 44 pow 0
22: PostCall 44
23: GetReturnValue £temporary496
24: PushFloat x
25: GreaterThanEqual 27 £temporary496 x
26: Add exponent exponent integral4$1#
27: Equal 30 p integral8$0#
28: Dereference £temporary502 p 0
29: Assign £temporary502 exponent
30: PushFloat x
31: PreCall 44 System.Collections.Generic.HashSet`1[CCompiler.Symbol] 1
32: PushFloat floating8$2#
33: Parameter 68 double floating8$2#
34: IntegralToFloating £temporary505 exponent
35: Parameter 76 double £temporary505
36: Call 44 pow 0
37: PostCall 44
38: GetReturnValue £temporary506
39: Divide £temporary507 x £temporary506
40: SetReturnValue
41: Return £temporary507
42: Equal 45 p integral8$0#
43: Dereference £temporary509 p 0
44: Assign £temporary509 integral4$0#
45: PushFloat floating8$0#
46: SetReturnValue
47: Return floating8$0#
48: FunctionEnd frexp
